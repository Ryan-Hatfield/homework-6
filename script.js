
//---API key generated by open weather map.
const APIKey = "8ef05f7cbf5c643b35bd7aeae8048157";
//---Variables
    const cityInput = document.getElementById("cityInput");
    const searchBtn = document.getElementById("searchBtn");
    const clearBtn = document.getElementById("clearBtn");
    const city = document.getElementById("city");
    const icon = document.getElementById("icon");
    const temperature = document.getElementById("temperature");
    const humidity = document.getElementById("humidity");4
    const wind = document.getElementById("windSpeed");
    const uvIndex = document.getElementById("uvIndex");
    const history = document.getElementById("history");
    let searchHistory = JSON.parse(localStorage.getItem("search")) || [];
    console.log(searchHistory);
    
//---Event listener for search button.
    searchBtn.addEventListener("click",function() {
      const searchTerm = cityInput.value;
      displayWeather(searchTerm);
      searchHistory.push(searchTerm);
      localStorage.setItem("search",JSON.stringify(searchHistory));
      displaySearchHistory();
  })
//---Event listener for clear button
  clearBtn.addEventListener("click",function() {
      searchHistory = [];
      displaySearchHistory();
  })
//--Function for displaying the search history.
  function displaySearchHistory() {
      history.innerHTML = "";
      for (let i=0; i<searchHistory.length; i++) {
//---Creating an input inside the history form and make it read only.
          const cityHistory = document.createElement("input");
          cityHistory.setAttribute("type","text");
          cityHistory.setAttribute("readonly",true);
          cityHistory.setAttribute("class", "form-control d-block bg-white");
          cityHistory.setAttribute("value", searchHistory[i]);
//---Event listener for when a history item is clicked, it will display the weather for that city.
          cityHistory.addEventListener("click",function() {
              displayWeather(cityHistory.value);
          })
          history.append(cityHistory);
      }
  }
//---Display search history from storage    
    displaySearchHistory();
    if (searchHistory.length > 0) {
        displayWeather(searchHistory[searchHistory.length - 1]);
    }
//---Temperature conversion K to F
    function temperatureConv(K) {
      return Math.floor((K - 273.15) *1.8 +32);
  }
//---Setting up the API to to get the data from open weather map for current weather

    function displayWeather(cityName) {
        let queryURL = "https://api.openweathermap.org/data/2.5/weather?q=" + cityName + "&appid=" + APIKey;
        axios.get(queryURL)
        .then(function(response){
            console.log(response);
//---Method for using "date" objects obtained from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date
            const currentDate = new Date(response.data.dt*1000);
            console.log(currentDate);
            const day = currentDate.getDate();
            const month = currentDate.getMonth() + 1;
            const year = currentDate.getFullYear();
            city.innerHTML = response.data.name + " (" + month + "/" + day + "/" + year + ") ";
            let weatherIcon = response.data.weather[0].icon;
            icon.setAttribute("src","https://openweathermap.org/img/w/" + weatherIcon + ".png");
            icon.setAttribute("alt",response.data.weather[0].description);
            temperature.innerHTML = "Temperature: " + temperatureConv(response.data.main.temp) + " &#176F";
            humidity.innerHTML = "Humidity: " + response.data.main.humidity + "%";
            wind.innerHTML = "Wind Speed: " + response.data.wind.speed + " MPH";
//---Setting up the API to to get the data from open weather map for the UV Index 
        let lat = response.data.coord.lat;
        let lon = response.data.coord.lon;
        let UVQueryURL = "https://api.openweathermap.org/data/2.5/uvi/forecast?lat=" + lat + "&lon=" + lon + "&appid=" + APIKey + "&cnt=1";
        axios.get(UVQueryURL)
        .then(function(response){
            let uvi = document.createElement("span");
            uvi.setAttribute("class","badge badge-danger");
            uvi.innerHTML = response.data[0].value;
            uvIndex.innerHTML = "UV Index: ";
            uvIndex.append(uvi);
        });

        });  
    }

    
